import 'package:flutter/material.dart';

import '../../../app/core/app_colors.dart';
import '../../../app/shared/utils/slider_shape.dart';
import '../../../app/core/controllers/player.dart';

class Equalizer extends StatefulWidget {
  const Equalizer({super.key});

  @override
  State<Equalizer> createState() => _EqualizerState();
}

class _EqualizerState extends State<Equalizer> {
  @override
  Widget build(BuildContext context) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        SliderTheme(
          data: const SliderThemeData(
            trackShape: CustomSliderTrackShape(),
          ),
          child: Slider(
            thumbColor: AppColors.primary,
            inactiveColor: AppColors.onBackground,
            activeColor: AppColors.primary,
            min: 0,
            max: 120,
            value: 0.toDouble(),
            onChanged: (value) {},
          ),
        ),
        SliderTheme(
          data: const SliderThemeData(
            trackShape: CustomSliderTrackShape(),
          ),
          child: Slider(
            thumbColor: AppColors.primary,
            inactiveColor: AppColors.onBackground,
            activeColor: AppColors.primary,
            min: 0,
            max: 120,
            value: 0.toDouble(),
            onChanged: (value) {},
          ),
        ),
        SliderTheme(
          data: const SliderThemeData(
            trackShape: CustomSliderTrackShape(),
          ),
          child: Slider(
            thumbColor: AppColors.primary,
            inactiveColor: AppColors.onBackground,
            activeColor: AppColors.primary,
            min: 0,
            max: 120,
            value: 0.toDouble(),
            onChanged: (value) {},
          ),
        ),
        SliderTheme(
          data: const SliderThemeData(
            trackShape: CustomSliderTrackShape(),
          ),
          child: Slider(
            thumbColor: AppColors.primary,
            inactiveColor: AppColors.onBackground,
            activeColor: AppColors.primary,
            min: 0,
            max: 120,
            value: 0.toDouble(),
            onChanged: (value) {},
          ),
        ),
        SliderTheme(
          data: const SliderThemeData(
            trackShape: CustomSliderTrackShape(),
          ),
          child: Slider(
            thumbColor: AppColors.primary,
            inactiveColor: AppColors.onBackground,
            activeColor: AppColors.primary,
            min: 0,
            max: 120,
            value: 0.toDouble(),
            onChanged: (value) {},
          ),
        ),
      ],
    );
  }
}
